package models

import (
	"fmt"
	"github.com/jinzhu/gorm"
	"time"
)

const (
	LocationTypeCountry LocationType = 0
	LocationTypeState   LocationType = 1
	LocationTypeCity    LocationType = 2
)

type LocationType int64

type Location struct {
	ID           int64        `json:"id" gorm:"column:id;primary_key"`
	Name         string       `json:"name" gorm:"column:name;not null;index"`
	ISOName      *string      `json:"iso_name" gorm:"column:iso_name;index"`
	LocationType LocationType `json:"-" gorm:"column:location_type;not null;index"`
	ParentID     int64        `json:"-" gorm:"column:parent_id;type:bigint;not null;index"`
	IsPublished  int64        `json:"is_published" gorm:"column:is_published;not null;index"`
	CreatedAt    time.Time    `json:"created_at" gorm:"column:created_at;default:CURRENT_TIMESTAMP"`
	UpdatedAt    time.Time    `json:"updated_at" gorm:"column:updated_at;default:CURRENT_TIMESTAMP"`
}

func (l *Location) TableName() string {
	return "locations"
}

func (l *Location) Populate(db *gorm.DB) error {
	query := `INSERT INTO %s (id, name, iso_name, location_type, parent_id, is_published) VALUES(1, 'Afghanistan', 'AF', 0, 0, 1),(2, 'Albania', 'AL', 0, 0, 1),(3, 'Algeria', 'DZ', 0, 0, 1),(4, 'American Samoa', 'AS', 0, 0, 1),(5, 'Andorra', 'AD', 0, 0, 1),(6, 'Angola', 'AO', 0, 0, 1),(7, 'Anguilla', 'AI', 0, 0, 1),(8, 'Antarctica', 'AQ', 0, 0, 1),(9, 'Antigua and Barbuda', 'AG', 0, 0, 1),(10, 'Argentina', 'AR', 0, 0, 1),(11, 'Armenia', 'AM', 0, 0, 1),(12, 'Aruba', 'AW', 0, 0, 1),(13, 'Australia', 'AU', 0, 0, 1),(14, 'Austria', 'AT', 0, 0, 1),(15, 'Azerbaijan', 'AZ', 0, 0, 1),(16, 'Bahamas', 'BS', 0, 0, 1),(17, 'Bahrain', 'BH', 0, 0, 1),(18, 'Bangladesh', 'BD', 0, 0, 1),(19, 'Barbados', 'BB', 0, 0, 1),(20, 'Belarus', 'BY', 0, 0, 1),(21, 'Belgium', 'BE', 0, 0, 1),(22, 'Belize', 'BZ', 0, 0, 1),(23, 'Benin', 'BJ', 0, 0, 1),(24, 'Bermuda', 'BM', 0, 0, 1),(25, 'Bhutan', 'BT', 0, 0, 1),(26, 'Bolivia', 'BO', 0, 0, 1),(27, 'Bonaire, Sint Eustatius and Saba', 'BQ', 0, 0, 1),(28, 'Bosnia and Herzegovina', 'BA', 0, 0, 1),(29, 'Botswana', 'BW', 0, 0, 1),(30, 'Brazil', 'BR', 0, 0, 1),(31, 'Brunei Darussalam', 'BN', 0, 0, 1),(32, 'Bulgaria', 'BG', 0, 0, 1),(33, 'Burkina Faso', 'BF', 0, 0, 1),(34, 'Burundi', 'BI', 0, 0, 1),(35, 'Cambodia', 'KH', 0, 0, 1),(36, 'Cameroon', 'CM', 0, 0, 1),(37, 'Canada', 'CA', 0, 0, 1),(38, 'Cape Verde', 'CV', 0, 0, 1),(39, 'Cayman Islands', 'KY', 0, 0, 1),(40, 'Central African Republic', 'CF', 0, 0, 1),(41, 'Chad', 'TD', 0, 0, 1),(42, 'Chile', 'CL', 0, 0, 1),(43, 'China', 'CN', 0, 0, 1),(44, 'Colombia', 'CO', 0, 0, 1),(45, 'Comoros', 'KM', 0, 0, 1),(46, 'Congo', 'CG', 0, 0, 1),(47, 'Congo, The Democratic Republic Of The', 'CD', 0, 0, 1),(48, 'Cook Islands', 'CK', 0, 0, 1),(49, 'Croatia', 'HR', 0, 0, 1),(50, 'Cuba', 'CU', 0, 0, 1),(51, 'Curaçao', 'CW', 0, 0, 1),(52, 'Cyprus', 'CY', 0, 0, 1),(53, 'Czech Republic', 'CZ', 0, 0, 1),(54, 'Côte D''Ivoire', 'CI', 0, 0, 1),(55, 'Denmark', 'DK', 0, 0, 1),(56, 'Djibouti', 'DJ', 0, 0, 1),(57, 'Dominica', 'DM', 0, 0, 1),(58, 'Dominican Republic', 'DO', 0, 0, 1),(59, 'Ecuador', 'EC', 0, 0, 1),(60, 'Egypt', 'EG', 0, 0, 1),(61, 'El Salvador', 'SV', 0, 0, 1),(62, 'Equatorial Guinea', 'GQ', 0, 0, 1),(63, 'Eritrea', 'ER', 0, 0, 1),(64, 'Estonia', 'EE', 0, 0, 1),(65, 'Ethiopia', 'ET', 0, 0, 1),(66, 'Falkland Islands (Malvinas)', 'FK', 0, 0, 1),(67, 'Faroe Islands', 'FO', 0, 0, 1),(68, 'Fiji', 'FJ', 0, 0, 1),(69, 'Finland', 'FI', 0, 0, 1),(70, 'France', 'FR', 0, 0, 1),(71, 'French Guiana', 'GF', 0, 0, 1),(72, 'French Polynesia', 'PF', 0, 0, 1),(73, 'Gabon', 'GA', 0, 0, 1),(74, 'Gambia', 'GM', 0, 0, 1),(75, 'Georgia', 'GE', 0, 0, 1),(76, 'Germany', 'DE', 0, 0, 1),(77, 'Ghana', 'GH', 0, 0, 1),(78, 'Gibraltar', 'GI', 0, 0, 1),(79, 'Greece', 'GR', 0, 0, 1),(80, 'Greenland', 'GL', 0, 0, 1),(81, 'Grenada', 'GD', 0, 0, 1),(82, 'Guadeloupe', 'GP', 0, 0, 1),(83, 'Guam', 'GU', 0, 0, 1),(84, 'Guam', 'GU', 0, 0, 1),(85, 'Guatemala', 'GT', 0, 0, 1),(86, 'Guernsey', 'GG', 0, 0, 1),(87, 'Guinea', 'GN', 0, 0, 1),(88, 'Guinea-Bissau', 'GW', 0, 0, 1),(89, 'Guyana', 'GY', 0, 0, 1),(90, 'Haiti', 'HT', 0, 0, 1),(91, 'Holy See (Vatican City State)', 'VA', 0, 0, 1),(92, 'Honduras', 'HN', 0, 0, 1),(93, 'Hong Kong', 'HK', 0, 0, 1),(94, 'Hungary', 'HU', 0, 0, 1),(95, 'Iceland', 'IS', 0, 0, 1),(96, 'India', 'IN', 0, 0, 1),(97, 'Indonesia', 'ID', 0, 0, 1),(98, 'Iran, Islamic Republic Of', 'IR', 0, 0, 1),(99, 'Iraq', 'IQ', 0, 0, 1),(100, 'Ireland', 'IE', 0, 0, 1),(101, 'Isle of Man', 'IM', 0, 0, 1),(102, 'Israel', 'IL', 0, 0, 1),(103, 'Italy', 'IT', 0, 0, 1),(104, 'Jamaica', 'JM', 0, 0, 1),(105, 'Japan', 'JP', 0, 0, 1),(106, 'Jersey', 'JE', 0, 0, 1),(107, 'Jordan', 'JO', 0, 0, 1),(108, 'Kazakhstan', 'KZ', 0, 0, 1),(109, 'Kenya', 'KE', 0, 0, 1),(110, 'Kiribati', 'KI', 0, 0, 1),(111, 'Korea, Democratic People''s Republic Of', 'KP', 0, 0, 1),(112, 'Korea, Republic of', 'KR', 0, 0, 1),(113, 'Kuwait', 'KW', 0, 0, 1),(114, 'Kyrgyzstan', 'KG', 0, 0, 1),(115, 'Lao People''s Democratic Republic', 'LA', 0, 0, 1),(116, 'Latvia', 'LV', 0, 0, 1),(117, 'Lebanon', 'LB', 0, 0, 1),(118, 'Lesotho', 'LS', 0, 0, 1),(119, 'Liberia', 'LR', 0, 0, 1),(120, 'Libya', 'LY', 0, 0, 1),(121, 'Liechtenstein', 'LI', 0, 0, 1),(122, 'Lithuania', 'LT', 0, 0, 1),(123, 'Luxembourg', 'LU', 0, 0, 1),(124, 'Macao', 'MO', 0, 0, 1),(125, 'Macedonia, the Former Yugoslav Republic Of', 'MK', 0, 0, 1),(126, 'Madagascar', 'MG', 0, 0, 1),(127, 'Malawi', 'MW', 0, 0, 1),(128, 'Malaysia', 'MY', 0, 0, 1),(129, 'Maldives', 'MV', 0, 0, 1),(130, 'Mali', 'ML', 0, 0, 1),(131, 'Malta', 'MT', 0, 0, 1),(132, 'Marshall Islands', 'MH', 0, 0, 1),(133, 'Martinique', 'MQ', 0, 0, 1),(134, 'Mauritania', 'MR', 0, 0, 1),(135, 'Mauritius', 'MU', 0, 0, 1),(136, 'Mayotte', 'YT', 0, 0, 1),(137, 'Mexico', 'MX', 0, 0, 1),(138, 'Micronesia, Federated States Of', 'FM', 0, 0, 1),(139, 'Moldova, Republic of', 'MD', 0, 0, 1),(140, 'Monaco', 'MC', 0, 0, 1),(141, 'Mongolia', 'MN', 0, 0, 1),(142, 'Montenegro', 'ME', 0, 0, 1),(143, 'Montserrat', 'MS', 0, 0, 1),(144, 'Morocco', 'MA', 0, 0, 1),(145, 'Mozambique', 'MZ', 0, 0, 1),(146, 'Myanmar', 'MM', 0, 0, 1),(147, 'Namibia', 'NA', 0, 0, 1),(148, 'Nauru', 'NR', 0, 0, 1),(149, 'Nepal', 'NP', 0, 0, 1),(150, 'Netherlands', 'NL', 0, 0, 1),(151, 'New Caledonia', 'NC', 0, 0, 1),(152, 'New Zealand', 'NZ', 0, 0, 1),(153, 'Nicaragua', 'NI', 0, 0, 1),(154, 'Niger', 'NE', 0, 0, 1),(155, 'Nigeria', 'NG', 0, 0, 1),(156, 'Niue', 'NU', 0, 0, 1),(157, 'Norfolk Island', 'NF', 0, 0, 1),(158, 'Northern Mariana Islands', 'MP', 0, 0, 1),(159, 'Northern Mariana Islands', 'MP', 0, 0, 1),(160, 'Norway', 'NO', 0, 0, 1),(161, 'Oman', 'OM', 0, 0, 1),(162, 'Pakistan', 'PK', 0, 0, 1),(163, 'Palau', 'PW', 0, 0, 1),(164, 'Palestine, State of', 'PS', 0, 0, 1),(165, 'Panama', 'PA', 0, 0, 1),(166, 'Papua New Guinea', 'PG', 0, 0, 1),(167, 'Paraguay', 'PY', 0, 0, 1),(168, 'Peru', 'PE', 0, 0, 1),(169, 'Philippines', 'PH', 0, 0, 1),(170, 'Pitcairn', 'PN', 0, 0, 1),(171, 'Poland', 'PL', 0, 0, 1),(172, 'Portugal', 'PT', 0, 0, 1),(173, 'Puerto Rico', 'PR', 0, 0, 1),(174, 'Puerto Rico', 'PR', 0, 0, 1),(175, 'Qatar', 'QA', 0, 0, 1),(176, 'Romania', 'RO', 0, 0, 1),(177, 'Russian Federation', 'RU', 0, 0, 1),(178, 'Rwanda', 'RW', 0, 0, 1),(179, 'Réunion', 'RE', 0, 0, 1),(180, 'Saint Barthélemy', 'BL', 0, 0, 1),(181, 'Saint Helena', 'SH', 0, 0, 1),(182, 'Saint Kitts And Nevis', 'KN', 0, 0, 1),(183, 'Saint Lucia', 'LC', 0, 0, 1),(184, 'Saint Martin', 'MF', 0, 0, 1),(185, 'Saint Pierre And Miquelon', 'PM', 0, 0, 1),(186, 'Saint Vincent And The Grenadines', 'VC', 0, 0, 1),(187, 'Samoa', 'WS', 0, 0, 1),(188, 'San Marino', 'SM', 0, 0, 1),(189, 'Sao Tome and Principe', 'ST', 0, 0, 1),(190, 'Saudi Arabia', 'SA', 0, 0, 1),(191, 'Senegal', 'SN', 0, 0, 1),(192, 'Serbia', 'RS', 0, 0, 1),(193, 'Seychelles', 'SC', 0, 0, 1),(194, 'Sierra Leone', 'SL', 0, 0, 1),(195, 'Singapore', 'SG', 0, 0, 1),(196, 'Sint Maarten', 'SX', 0, 0, 1),(197, 'Slovakia', 'SK', 0, 0, 1),(198, 'Slovenia', 'SI', 0, 0, 1),(199, 'Solomon Islands', 'SB', 0, 0, 1),(200, 'Somalia', 'SO', 0, 0, 1),(201, 'South Africa', 'ZA', 0, 0, 1),(202, 'South Sudan', 'SS', 0, 0, 1),(203, 'Spain', 'ES', 0, 0, 1),(204, 'Sri Lanka', 'LK', 0, 0, 1),(205, 'Sudan', 'SD', 0, 0, 1),(206, 'Suriname', 'SR', 0, 0, 1),(207, 'Svalbard And Jan Mayen', 'SJ', 0, 0, 1),(208, 'Swaziland', 'SZ', 0, 0, 1),(209, 'Sweden', 'SE', 0, 0, 1),(210, 'Switzerland', 'CH', 0, 0, 1),(211, 'Syrian Arab Republic', 'SY', 0, 0, 1),(212, 'Taiwan, Republic Of China', 'TW', 0, 0, 1),(213, 'Tajikistan', 'TJ', 0, 0, 1),(214, 'Tanzania, United Republic of', 'TZ', 0, 0, 1),(215, 'Thailand', 'TH', 0, 0, 1),(216, 'Timor-Leste', 'TL', 0, 0, 1),(217, 'Togo', 'TG', 0, 0, 1),(218, 'Tokelau', 'TK', 0, 0, 1),(219, 'Tonga', 'TO', 0, 0, 1),(220, 'Trinidad and Tobago', 'TT', 0, 0, 1),(221, 'Tunisia', 'TN', 0, 0, 1),(222, 'Turkey', 'TR', 0, 0, 1),(223, 'Turkmenistan', 'TM', 0, 0, 1),(224, 'Turks and Caicos Islands', 'TC', 0, 0, 1),(225, 'Tuvalu', 'TV', 0, 0, 1),(226, 'Uganda', 'UG', 0, 0, 1),(227, 'Ukraine', 'UA', 0, 0, 1),(228, 'United Arab Emirates', 'AE', 0, 0, 1),(229, 'United Kingdom', 'GB', 0, 0, 1),(230, 'United States', 'US', 0, 0, 1),(231, 'United States Minor Outlying Islands', 'UM', 0, 0, 1),(232, 'Uruguay', 'UY', 0, 0, 1),(233, 'Uzbekistan', 'UZ', 0, 0, 1),(234, 'Vanuatu', 'VU', 0, 0, 1),(235, 'Venezuela, Bolivarian Republic of', 'VE', 0, 0, 1),(236, 'Vietnam', 'VN', 0, 0, 1),(237, 'Virgin Islands, British', 'VG', 0, 0, 1),(238, 'Virgin Islands, U.S.', 'VI', 0, 0, 1),(239, 'Virgin Islands, U.S.', 'VI', 0, 0, 1),(240, 'Wallis and Futuna', 'WF', 0, 0, 1),(241, 'Western Sahara', 'EH', 0, 0, 1),(242, 'Yemen', 'YE', 0, 0, 1),(243, 'Zambia', 'ZM', 0, 0, 1),(244, 'Zimbabwe', 'ZW', 0, 0, 1),(245, 'Åland Islands', 'AX', 0, 0, 1)`
	query = fmt.Sprintf(query, l.TableName())
	if err := db.Exec(query).Error; err != nil {
		return err
	}
	return nil
}
